education_level_grade <- "edu_level_grade"
barrier = "edu_barrier"
# barrier <- "resn_no_access"
number_displayed_barrier <- 5
# strata --> check consistency with the group_var column  in the loa
add_col1 = 'setting'
add_col2 = 'depl_situation_menage'
admin1 <- "admin1"
admin2 <- "admin2"
admin3 <- "admin3"
# add_col1 <- "urbanity_setting"
# add_col2 <- "forcibly_displaced"
# stratum =
label_overall <- if (language_assessment == "French") "Ensemble" else "Overall"
label_female <- if (language_assessment == "French") "Filles" else "Girls"
label_male <- if (language_assessment == "French") "Garcons" else "Boys"
label_edu_school_cycle <- if (language_assessment == "French") "Cycle Scolaire Assigné par Âge" else "Age-Assigned School Cycle"
# Read ISCED info
info_country_school_structure <- read_ISCED_info(country_assessment, path_ISCED_file)
summary_info_school <- info_country_school_structure$summary_info_school
labels_with_ages <- summary_info_school %>%
rowwise() %>%
mutate(label = extract_label_for_level_ordering(summary_info_school, cur_data(), language_assessment)) %>%
pull(label)
# Read the loa
loa <- readxl::read_excel(loa_path, sheet = "Sheet1")
# Read data helper and process it
data_helper_sheets <- readxl::excel_sheets(data_helper_table)
data_helper <- data_helper_sheets %>%
map(~ read_excel(data_helper_table, sheet = .x)) |>
set_names(data_helper_sheets)
data_helper <- data_helper |>
map(~ .x |>
as.list() %>%
map(na.omit) %>%
map(c))
##################################################################################################
# 1 ----------------- 01-add_education_indicators.R -----------------
main_sheet <- label_main_sheet
loop_sheet <- label_edu_sheet
stratum <- NULL
additional_stratum <- NULL
add_col3 <- NULL
add_col4 <- NULL
add_col5 <- NULL
add_col6 <- NULL
add_col7 <- NULL
add_col8 <- NULL
source('src/01-add_education_indicators.R') ## OUTPUT: output/loop_edu_recorded.xlsx
#--------------------------------------------------------------------------------------------------------
# Apply transformations to loop dataset
loop <- loop |>
# Education from Humind
add_loop_edu_ind_age_corrected(main = main, id_col_loop = id_col_loop, id_col_main = id_col_main, survey_start_date = survey_start_date, school_year_start_month = school_year_start_month, ind_age = ind_age) |>
add_loop_edu_access_d(ind_access = ind_access) |>
add_loop_edu_disrupted_d(occupation = occupation, hazards = hazards, displaced = displaced, teacher = teacher) |>
# from 00_edu_function.R
# Add a column edu_school_cycle with ECE, primary (1 or 2 cycles) and secondary
add_edu_school_cycle(country_assessment = country_assessment, path_ISCED_file = path_ISCED_file, language_assessment =language_assessment) |>
# IMPORTANT: THE INDICATOR MUST COMPLAY WITH THE MSNA GUIDANCE AND LOGIC --> data/edu_ISCED/UNESCO ISCED Mappings_MSNAcountries_consolidated
# Add columns to use for calculation of the composite indicators: Net attendance, early-enrollment, overage learners
add_edu_level_grade_indicators(country_assessment = country_assessment, path_ISCED_file = path_ISCED_file, education_level_grade = education_level_grade, id_col_loop = id_col_loop, pnta = pnta, dnk = dnk) |>
#harmonized variable to use the loa_edu
add_loop_edu_barrier_d(barrier = barrier)|>
add_loop_child_gender_d (ind_gender = ind_gender, language_assessment = language_assessment)
# Load packages -----------------------------------------------------------
library(impactR.utils)
library(humind)
library(presentresults)
library(analysistools)
# Needed tidyverse packages
library(dplyr)
library(readxl)
library(openxlsx)
library(tidyr)
library(stringr)
library(ggplot2)
library(srvyr)
library(gt)
source("src/functions/00_edu_helper.R")
source("src/functions/00_edu_function.R")
source("src/functions/create_education_table_group_x_var.R")
source("src/functions/create_education_xlsx_table.R")
## --------------------------
country_assessment = 'HTI'
language_assessment = 'French'
# country_assessment <- "AFG"
# language_assessment <- "English"
## --------------- File paths
#-- input data
path_ISCED_file <- 'resources/UNESCO ISCED Mappings_MSNAcountries_consolidated.xlsx'
data_file <- 'input_data/HTI2401-MSNA-DEPARTEMENTS-Clean-dataset.xlsx'
label_main_sheet <-'Clean Data'
label_edu_sheet <- 'ind_loop'
# path_ISCED_file <- "resources/UNESCO ISCED Mappings_MSNAcountries_consolidated.xlsx"
# data_file <- "input_data/AFG2403_MSNA_WoAA_2024_clean_data.xlsx"
# label_main_sheet <- "AFG2403 MSNA WoAA 2024 MODULE 1"
# label_edu_sheet <- "edu_ind"
kobo_path <- "input_data/HTI_kobo.xlsx"
label_survey_sheet <-'survey'
label_choices_sheet <- 'choices'
kobo_language_label <- "label::french"
# kobo_path <- "input_data/AFG2403_MSNA_WoAA2024_kobo_tool.xlsx"
# label_survey_sheet <- "survey"
# label_choices_sheet <- "choices"
# kobo_language_label <- "label::English"
#-- input tool
# please modify the group_var according to your context
loa_path = "input_tool/edu_analysistools_loa.xlsx"
# loa_path <- "input_tool/edu_analysistools_loa_AFG.xlsx"
suffix <- ifelse(language_assessment == "French", "_FR", "_EN")
data_helper_table <- paste0("input_tool/edu_table_helper", suffix, ".xlsx")
# data_helper_table <- ("input_tool/edu_table_helper_EN_AFG.xlsx")
labelling_tool_path <- "input_tool/edu_indicator_labelling.xlsx"
## -------------  definition of variable according to the analysis' context
id_col_loop = '_submission__uuid.x' # uuid
id_col_main = '_uuid' # uuid
survey_start_date = 'start'# column with the survey start
school_year_start_month = 9 # start school year in country
ind_age = 'ind_age' # individual age variable
ind_gender = 'ind_gender' # individual gender variable
pnta = "pnta"
dnk = "dnk"
# weight_col = 'weight'
# id_col_loop <- "_submission__uuid" # uuid
# id_col_main <- "_uuid" # uuid
# survey_start_date <- "start" # column with the survey start
# school_year_start_month <- 9 # start school year in country
# ind_age <- "edu_ind_age" # individual age variable
# ind_gender <- "edu_ind_gender" # individual gender variable
# pnta <- "pnta"
# dnk <- "dnk"
weight_col <- "weights"
# indicators
ind_access <- "edu_access"
occupation <- "edu_disrupted_occupation"
hazards <- "edu_disrupted_hazards"
displaced <- "edu_disrupted_displaced"
teacher <- "edu_disrupted_teacher"
education_level_grade <- "edu_level_grade"
barrier = "edu_barrier"
# barrier <- "resn_no_access"
number_displayed_barrier <- 5
# strata --> check consistency with the group_var column  in the loa
add_col1 = 'setting'
add_col2 = 'depl_situation_menage'
admin1 <- "admin1"
admin2 <- "admin2"
admin3 <- "admin3"
# add_col1 <- "urbanity_setting"
# add_col2 <- "forcibly_displaced"
# stratum =
label_overall <- if (language_assessment == "French") "Ensemble" else "Overall"
label_female <- if (language_assessment == "French") "Filles" else "Girls"
label_male <- if (language_assessment == "French") "Garcons" else "Boys"
label_edu_school_cycle <- if (language_assessment == "French") "Cycle Scolaire Assigné par Âge" else "Age-Assigned School Cycle"
# Read ISCED info
info_country_school_structure <- read_ISCED_info(country_assessment, path_ISCED_file)
summary_info_school <- info_country_school_structure$summary_info_school
labels_with_ages <- summary_info_school %>%
rowwise() %>%
mutate(label = extract_label_for_level_ordering(summary_info_school, cur_data(), language_assessment)) %>%
pull(label)
# Read the loa
loa <- readxl::read_excel(loa_path, sheet = "Sheet1")
# Read data helper and process it
data_helper_sheets <- readxl::excel_sheets(data_helper_table)
data_helper <- data_helper_sheets %>%
map(~ read_excel(data_helper_table, sheet = .x)) |>
set_names(data_helper_sheets)
data_helper <- data_helper |>
map(~ .x |>
as.list() %>%
map(na.omit) %>%
map(c))
##################################################################################################
# 1 ----------------- 01-add_education_indicators.R -----------------
main_sheet <- label_main_sheet
loop_sheet <- label_edu_sheet
stratum <- NULL
additional_stratum <- NULL
add_col3 <- NULL
add_col4 <- NULL
add_col5 <- NULL
add_col6 <- NULL
add_col7 <- NULL
add_col8 <- NULL
source('src/01-add_education_indicators.R') ## OUTPUT: output/loop_edu_recorded.xlsx
# 2 ----------------- 02-education_analysis.R -----------------
source('src/02-education_analysis.R') ## OUTPUT: output/grouped_other_education_results_loop.RDS
# 3 ----------------- 03-education_labeling.R -----------------
source('src/03-education_labeling.R')  ## OUTPUT: output/labeled_results_table.RDS  ---- df: education_results_table_labelled
# 4 ----------------- create workbook for tables -----------------
education_results_table_labelled <- readRDS("output/labeled_results_table.RDS")
wb <- openxlsx::createWorkbook("education_results")
addWorksheet(wb, "Table_of_content")
writeData(wb, sheet = "Table_of_content", x = "Table of Content", startCol = 1, startRow = 1)
row_number_lookup <- c(
"access" = 2,
"overaged" = 3,
"out_of_school" = 4,
"ece" = 5,
"level1" = 6,
"level2" = 7,
"level3" = 8,
"level4" = 9
)
# 5 ----------------- 04-01-make-table-access-disruptions.R -----------------
# To repeat according to the number of tabs in the data_helper
tab_helper <- "access"
source("src/04-01-make-table-access-overaged-barriers.R")
tab_helper <- "overaged"
source("src/04-01-make-table-access-overaged-barriers.R")
## IMPORTANT: open grouped_other_education_results_loop and copy the first (in decreasing order) 5 edu_barrier_d results in the edu_indicator_labelling_FR/EN.xlsx.
tab_helper <- "out_of_school"
source("src/04-01-make-table-access-overaged-barriers.R")
# 5 ----------------- 04-02-make-level-table.R -----------------
# To repeat according to the number of levels in the country's school system
tab_helper <- "ece"
source("src/04-02-make-level-table.R")
# Get correct label level
if (tab_helper == "ece") {
label_level <- extract_label_for_level(summary_info_school, label_level_code = "level0", language_assessment)
} else {
label_level <- extract_label_for_level(summary_info_school, label_level_code = tab_helper, language_assessment)
}
# Get correct label level
if (tab_helper == "ece") {
label_level <- extract_label_for_level(summary_info_school, label_level_code = "level0", language_assessment = language_assessment)
} else {
label_level <- extract_label_for_level(summary_info_school, label_level_code = tab_helper, language_assessment = language_assessment)
}
# Prepare the LOA for the specific level
loa_level <- loa %>%
mutate(
group_var = str_replace_all(group_var, ",", " %/% "),
group_var = str_squish(group_var)
) %>%
filter(!!sym(tab_helper))
# Join education results with LOA filtered by tab_helper
filtered_education_results_table_labelled <- education_results_table_labelled %>%
right_join(unique(loa_level %>% select(analysis_var, group_var, !!sym(tab_helper))))
# Filter results
filtered_education_results_table_labelled <- filtered_education_results_table_labelled %>%
filter(
!!sym(tab_helper),
analysis_var_value != "0",
str_detect(group_var_value, label_level)
) %>%
select(-!!sym(tab_helper))
# Separate level table data
tab_helper_only <- filtered_education_results_table_labelled %>%
filter(group_var %in% c("edu_school_cycle_d", paste0("edu_school_cycle_d %/% ", "child_gender_d")))
tab_helper_other <- filtered_education_results_table_labelled %>%
filter(!group_var %in% c("edu_school_cycle_d", paste0("edu_school_cycle_d %/% ", "child_gender_d"))) %>%
mutate(
group_var = str_remove_all(group_var, "edu_school_cycle_d( %/% )*"),
group_var_value = str_remove_all(group_var_value, paste0(label_level, "( %/% )*")),
label_group_var = str_remove_all(label_group_var, paste0(label_edu_school_cycle, "( %/% )*")),
label_group_var_value = str_remove_all(label_group_var_value, paste0(label_level, "( %/% )*"))
)
# Combine both parts of the level table
all_tab_helper <- rbind(tab_helper_only, tab_helper_other)
saveRDS(all_tab_helper, paste0("output/rds_results/", tab_helper, "_results.rds"))
x4 <- all_tab_helper %>%
create_education_table_group_x_var(
label_overall = label_overall,
label_female = label_female,
label_male = label_male
)
order_appearing <- c(label_overall, label_level, unique(wider_table$label_group_var_value)) %>%
na.omit() %>%
unique()
t4 <- x4 %>%
create_education_gt_table(data_helper = data_helper[[tab_helper]], order_appearing)
create_xlsx_education_table(t4, wb, tab_helper)
t4
row_number <- row_number_lookup[[tab_helper]]
# Add a hyperlink to the table of content
writeFormula(wb, "Table_of_content",
startRow = row_number,
x = makeHyperlinkString(
sheet = tab_helper, row = 1, col = 1,
text = data_helper[[tab_helper]]$title
)
)
View(all_tab_helper)
tab_helper_only
tab_helper_other
tab_helper_only
View(all_tab_helper)
# 5 ----------------- 04-02-make-level-table.R -----------------
# To repeat according to the number of levels in the country's school system
tab_helper <- "ece"
source("src/04-02-make-level-table.R")
tab_helper <- "level1"
source("src/04-02-make-level-table.R")
tab_helper <- "level2"
source("src/04-02-make-level-table.R")
tab_helper <- "level3"
source("src/04-02-make-level-table.R")
openxlsx::saveWorkbook(wb, "output/education_results.xlsx", overwrite = T)
openxlsx::openXL("output/education_results.xlsx")
# 6 ----------------- 05-01-make-level-table.R -----------------
# To repeat according to the number of tabs in the data_helper
tab_helper <- "access"
results_filtered <- "output/rds_results/access_results.rds"
source("src/05-01-make-graphs-and-maps-tables.R")
tab_helper <- "overaged"
results_filtered <- "output/rds_results/overaged_results.rds"
source("src/05-01-make-graphs-and-maps-tables.R")
tab_helper <- "out_of_school"
results_filtered <- "output/rds_results/out_of_school_results.rds"
source("src/05-01-make-graphs-and-maps-tables.R")
tab_helper <- "ece"
results_filtered <- "output/rds_results/ece_results.rds"
source("src/05-01-make-graphs-and-maps-tables.R")
tab_helper <- "level1"
results_filtered <- "output/rds_results/level1_results.rds"
source("src/05-01-make-graphs-and-maps-tables.R")
tab_helper <- "level2"
results_filtered <- "output/rds_results/level2_results.rds"
source("src/05-01-make-graphs-and-maps-tables.R")
tab_helper <- "level3"
results_filtered <- "output/rds_results/level3_results.rds"
source("src/05-01-make-graphs-and-maps-tables.R")
# Load packages -----------------------------------------------------------
library(impactR.utils)
library(humind)
library(presentresults)
library(analysistools)
# Needed tidyverse packages
library(dplyr)
library(readxl)
library(openxlsx)
library(tidyr)
library(stringr)
library(ggplot2)
library(srvyr)
library(gt)
source("src/functions/00_edu_helper.R")
source("src/functions/00_edu_function.R")
source("src/functions/create_education_table_group_x_var.R")
source("src/functions/create_education_xlsx_table.R")
## --------------------------
country_assessment = 'HTI'
language_assessment = 'French'
# country_assessment <- "AFG"
# language_assessment <- "English"
## --------------- File paths
#-- input data
path_ISCED_file <- 'resources/UNESCO ISCED Mappings_MSNAcountries_consolidated.xlsx'
data_file <- 'input_data/HTI2401-MSNA-DEPARTEMENTS-Clean-dataset.xlsx'
label_main_sheet <-'Clean Data'
label_edu_sheet <- 'ind_loop'
# path_ISCED_file <- "resources/UNESCO ISCED Mappings_MSNAcountries_consolidated.xlsx"
# data_file <- "input_data/AFG2403_MSNA_WoAA_2024_clean_data.xlsx"
# label_main_sheet <- "AFG2403 MSNA WoAA 2024 MODULE 1"
# label_edu_sheet <- "edu_ind"
kobo_path <- "input_data/HTI_kobo.xlsx"
label_survey_sheet <-'survey'
label_choices_sheet <- 'choices'
kobo_language_label <- "label::french"
# kobo_path <- "input_data/AFG2403_MSNA_WoAA2024_kobo_tool.xlsx"
# label_survey_sheet <- "survey"
# label_choices_sheet <- "choices"
# kobo_language_label <- "label::English"
#-- input tool
# please modify the group_var according to your context
loa_path = "input_tool/edu_analysistools_loa.xlsx"
# loa_path <- "input_tool/edu_analysistools_loa_AFG.xlsx"
suffix <- ifelse(language_assessment == "French", "_FR", "_EN")
data_helper_table <- paste0("input_tool/edu_table_helper", suffix, ".xlsx")
# data_helper_table <- ("input_tool/edu_table_helper_EN_AFG.xlsx")
labelling_tool_path <- "input_tool/edu_indicator_labelling.xlsx"
## -------------  definition of variable according to the analysis' context
id_col_loop = '_submission__uuid.x' # uuid
id_col_main = '_uuid' # uuid
survey_start_date = 'start'# column with the survey start
school_year_start_month = 9 # start school year in country
ind_age = 'ind_age' # individual age variable
ind_gender = 'ind_gender' # individual gender variable
pnta = "pnta"
dnk = "dnk"
# weight_col = 'weight'
# id_col_loop <- "_submission__uuid" # uuid
# id_col_main <- "_uuid" # uuid
# survey_start_date <- "start" # column with the survey start
# school_year_start_month <- 9 # start school year in country
# ind_age <- "edu_ind_age" # individual age variable
# ind_gender <- "edu_ind_gender" # individual gender variable
# pnta <- "pnta"
# dnk <- "dnk"
weight_col <- "weights"
# indicators
ind_access <- "edu_access"
occupation <- "edu_disrupted_occupation"
hazards <- "edu_disrupted_hazards"
displaced <- "edu_disrupted_displaced"
teacher <- "edu_disrupted_teacher"
education_level_grade <- "edu_level_grade"
barrier = "edu_barrier"
# barrier <- "resn_no_access"
number_displayed_barrier <- 5
# strata --> check consistency with the group_var column  in the loa
add_col1 = 'setting'
add_col2 = 'depl_situation_menage'
admin1 <- "admin1"
admin2 <- "admin2"
admin3 <- "admin3"
# add_col1 <- "urbanity_setting"
# add_col2 <- "forcibly_displaced"
# stratum =
label_overall <- if (language_assessment == "French") "Ensemble" else "Overall"
label_female <- if (language_assessment == "French") "Filles" else "Girls"
label_male <- if (language_assessment == "French") "Garcons" else "Boys"
label_edu_school_cycle <- if (language_assessment == "French") "Cycle Scolaire Assigné par Âge" else "Age-Assigned School Cycle"
# Read ISCED info
info_country_school_structure <- read_ISCED_info(country_assessment, path_ISCED_file)
summary_info_school <- info_country_school_structure$summary_info_school
labels_with_ages <- summary_info_school %>%
rowwise() %>%
mutate(label = extract_label_for_level_ordering(summary_info_school, cur_data(), language_assessment)) %>%
pull(label)
# Read the loa
loa <- readxl::read_excel(loa_path, sheet = "Sheet1")
# Read data helper and process it
data_helper_sheets <- readxl::excel_sheets(data_helper_table)
data_helper <- data_helper_sheets %>%
map(~ read_excel(data_helper_table, sheet = .x)) |>
set_names(data_helper_sheets)
data_helper <- data_helper |>
map(~ .x |>
as.list() %>%
map(na.omit) %>%
map(c))
##################################################################################################
# 1 ----------------- 01-add_education_indicators.R -----------------
main_sheet <- label_main_sheet
loop_sheet <- label_edu_sheet
stratum <- NULL
additional_stratum <- NULL
add_col3 <- NULL
add_col4 <- NULL
add_col5 <- NULL
add_col6 <- NULL
add_col7 <- NULL
add_col8 <- NULL
source('src/01-add_education_indicators.R') ## OUTPUT: output/loop_edu_recorded.xlsx
# 2 ----------------- 02-education_analysis.R -----------------
source('src/02-education_analysis.R') ## OUTPUT: output/grouped_other_education_results_loop.RDS
# 3 ----------------- 03-education_labeling.R -----------------
source('src/03-education_labeling.R')  ## OUTPUT: output/labeled_results_table.RDS  ---- df: education_results_table_labelled
# 4 ----------------- create workbook for tables -----------------
education_results_table_labelled <- readRDS("output/labeled_results_table.RDS")
wb <- openxlsx::createWorkbook("education_results")
addWorksheet(wb, "Table_of_content")
writeData(wb, sheet = "Table_of_content", x = "Table of Content", startCol = 1, startRow = 1)
row_number_lookup <- c(
"access" = 2,
"overaged" = 3,
"out_of_school" = 4,
"ece" = 5,
"level1" = 6,
"level2" = 7,
"level3" = 8,
"level4" = 9
)
# 5 ----------------- 04-01-make-table-access-disruptions.R -----------------
# To repeat according to the number of tabs in the data_helper
tab_helper <- "access"
source("src/04-01-make-table-access-overaged-barriers.R")
tab_helper <- "overaged"
source("src/04-01-make-table-access-overaged-barriers.R")
## IMPORTANT: open grouped_other_education_results_loop and copy the first (in decreasing order) 5 edu_barrier_d results in the edu_indicator_labelling_FR/EN.xlsx.
tab_helper <- "out_of_school"
source("src/04-01-make-table-access-overaged-barriers.R")
# 5 ----------------- 04-02-make-level-table.R -----------------
# To repeat according to the number of levels in the country's school system
tab_helper <- "ece"
source("src/04-02-make-level-table.R")
tab_helper <- "level1"
source("src/04-02-make-level-table.R")
tab_helper <- "level2"
source("src/04-02-make-level-table.R")
tab_helper <- "level3"
source("src/04-02-make-level-table.R")
openxlsx::saveWorkbook(wb, "output/education_results.xlsx", overwrite = T)
openxlsx::openXL("output/education_results.xlsx")
# 6 ----------------- 05-01-make-level-table.R -----------------
# To repeat according to the number of tabs in the data_helper
tab_helper <- "access"
results_filtered <- "output/rds_results/access_results.rds"
source("src/05-01-make-graphs-and-maps-tables.R")
tab_helper <- "overaged"
results_filtered <- "output/rds_results/overaged_results.rds"
source("src/05-01-make-graphs-and-maps-tables.R")
tab_helper <- "out_of_school"
results_filtered <- "output/rds_results/out_of_school_results.rds"
source("src/05-01-make-graphs-and-maps-tables.R")
tab_helper <- "ece"
results_filtered <- "output/rds_results/ece_results.rds"
source("src/05-01-make-graphs-and-maps-tables.R")
tab_helper <- "level1"
results_filtered <- "output/rds_results/level1_results.rds"
source("src/05-01-make-graphs-and-maps-tables.R")
tab_helper <- "level2"
results_filtered <- "output/rds_results/level2_results.rds"
source("src/05-01-make-graphs-and-maps-tables.R")
tab_helper <- "level3"
results_filtered <- "output/rds_results/level3_results.rds"
source("src/05-01-make-graphs-and-maps-tables.R")
