source('src/05-01-make-graphs-and-maps-tables.R')
tab_helper <- "ece"
results_filtered <- "output/rds_results/ece_results.rds"
source('src/05-01-make-graphs-and-maps-tables.R')
tab_helper <- "level1"
results_filtered <- "output/rds_results/level1_results.rds"
source('src/05-01-make-graphs-and-maps-tables.R')
tab_helper <- "level1"
results_filtered <- "output/rds_results/level1_results.rds"
child_gender_label <- "child_gender_d"
# Read data helper and process it
data_helper <- readxl::read_excel(data_helper_table, sheet = tab_helper)
data_helper <- data_helper %>% as.list() %>% map(na.omit) %>% map(c)
# Read results
disruptions_results <- readRDS(results_filtered)
# Adds the grouping variables for the graphs
disruptions_results_for_graphs <- disruptions_results %>%
tidyr::separate_wider_delim(cols = all_of(c("label_group_var", "label_group_var_value")),
" %/% ",
names_sep = "_",
too_few = "align_start") %>%
mutate(label_group_var_2 = if_else(is.na(label_group_var_2), child_gender_label, label_group_var_2),
label_group_var_value_2 = if_else(is.na(label_group_var_value_2), label_overall, label_group_var_value_2)) %>%
mutate(main_analysis_variable = case_when(label_analysis_var == data_helper$access_column ~ "Access",
label_analysis_var %in% data_helper$profile_columns ~ "Profile - dummy type",
label_analysis_var_value %in% data_helper$profile_columns ~ "Profile - choice type"))
# Turn into factor to control the ordering
order_appearing <- c(label_overall, "ECE", summary_info_school$name_level, unique(disruptions_results_for_graphs$label_group_var_value_1)) %>% na.omit() %>% unique()
gender_order <- c(label_overall, label_female, label_male)
disruptions_results_for_graphs <- disruptions_results_for_graphs %>%
mutate(label_analysis_var = factor(label_analysis_var, levels = unique(label_analysis_var)),
label_analysis_var_value = factor(label_analysis_var_value, levels = unique(label_analysis_var_value)),
label_group_var_1 = factor(label_group_var_1, levels = unique(label_group_var_1)),
label_group_var_value_1 = factor(label_group_var_value_1, levels = order_appearing),
label_group_var_2 = factor(label_group_var_2, levels = unique(label_group_var_2)),
label_group_var_value_2 = factor(label_group_var_value_2, levels = gender_order),
label_information = case_when(main_analysis_variable == "Profile - choice type" ~ label_analysis_var_value,
TRUE ~ label_analysis_var))
# Removes admin level (should be maps?)
no_admin_level <- disruptions_results_for_graphs %>%
filter(str_detect(group_var, "admin2",T))
# Type 1 plots - Indicators x 3 gender x 1 dissag
## Split by analysis var and group variable 1
type1_group_by_results <- no_admin_level |>
group_by(analysis_type, label_information, label_group_var_1, label_group_var_value_1)
type1_group_id <-   type1_group_by_results |>
group_keys()
type1_group_results <-  type1_group_by_results |>
group_split()
## Creates the plots
type1_plots <- type1_group_results %>%
map(~ .x %>%
ggplot2::ggplot(    ggplot2::aes(
x = label_group_var_value_2,
y = stat,
fill = label_group_var_value_2
)) +
ggplot2::geom_col(
position = "dodge"
) +
geom_text(aes(label = scales::percent(stat)), vjust = -0.5) +
theme_impact() +
theme_barplot() +
ggplot2::labs(
title = stringr::str_wrap(paste(unique(.x $label_information),
"%/%",
unique(.x$label_group_var_value_1))
, 50),
x = stringr::str_wrap(unique(.x $label_information), 50),
fill = stringr::str_wrap(unique(.x $label_group_var_2), 20)
) )
## Create a naming vector to save the plots
type1_file_names <- paste0("output/plots/",tab_helper,"/type_1/", 1:length(type1_plots), "type_1_plot.png")
## Save the plots
map2(type1_file_names, type1_plots, ~ggsave(filename = .x,
plot = .y,
width = 8,
bg = "white",
height = 4,
units = "in"))
type1_plots %>% saveRDS(paste0("output/plots/",tab_helper,"/type_1/","type_1_ggplots.rds"))
## Write plots index
type1_group_id %>% write.csv(paste0("output/plots/",tab_helper,"/type_1/","type_1_index.csv"))
# Type 2 plots - Profile per gender
## Split by label_group_var_value_1 and label_group_var_value_2
disruptions_only <- no_admin_level %>%
filter(str_detect(main_analysis_variable,"Profile"))
type2_group_by_results <- disruptions_only |>
group_by(analysis_type, label_group_var_value_1, label_group_var_value_2)
type2_group_id <-   type2_group_by_results |>
group_keys()
type2_group_results <-  type2_group_by_results |>
group_split()
if(tab_helper == "out_of_school") {
palette_to_use <- impact_palettes$tol_palette
} else {
palette_to_use <- impact_palettes$reach_palette
}
type2_plots <- type2_group_results |>
map(~ .x %>%
ggplot2::ggplot(    ggplot2::aes(
x = label_information,
y = stat,
fill = str_wrap(label_information, width = 20)
)) +
ggplot2::geom_col(
position = "dodge"
) +
geom_text(aes(label = scales::percent(x=stat, accuracy = 1L)), vjust = -0.5) +
ggplot2::labs(
title = stringr::str_wrap(paste("Profile for ",
unique(.x$group_var_value)),
50),
fill = stringr::str_wrap(unique(.x$main_analysis_variable), 20),
x = element_blank()
)+
theme_impact() +
theme_barplot(palette_to_use) +
theme(axis.line=element_blank(),
axis.text.x=element_blank())
)
## Create a naming vector to save the plots
type2_file_names <- paste0("output/plots/",tab_helper,"/type_2/", 1:length(type2_plots), "type_2_plot.png")
## Save the plots
map2(type2_file_names, type2_plots, ~ggsave(filename = .x,
plot = .y,
width = 8,
bg = "white",
height = 4,
units = "in"))
type2_file_names
type2_plots %>% length()
View(disruptions_only)
View(type1_plots)
# Load packages -----------------------------------------------------------
library(impactR.utils)
library(humind)
library (presentresults)
# Needed tidyverse packages
library(readxl)
library(openxlsx)
library(writexl)
library(tidyverse)
library(grid)
library(gridExtra)
library(srvyr)
library(analysistools)
library(gt)
source ('src/functions/00_edu_helper.R')
source ('src/functions/00_edu_function.R')
source("src/functions/create_education_table_group_x_var.R")
source("src/functions/create_education_xlsx_table.R")
## --------------------------
#country_assessment = 'HTI'
#language_assessment = 'French'
country_assessment = 'AFG'
language_assessment = 'English'
## --------------- File paths
#-- input data
# path_ISCED_file <- 'resources/UNESCO ISCED Mappings_MSNAcountries_consolidated.xlsx'
# data_file <- 'input_data/HTI2401-MSNA-DEPARTEMENTS-Clean-dataset.xlsx'
# label_main_sheet <-'Clean Data'
# label_edu_sheet <- 'ind_loop'
path_ISCED_file <- 'resources/UNESCO ISCED Mappings_MSNAcountries_consolidated.xlsx'
data_file <- 'input_data/AFG2403_MSNA_WoAA_2024_clean_data.xlsx'
label_main_sheet <-'AFG2403 MSNA WoAA 2024 MODULE 1'
label_edu_sheet <- 'edu_ind'
# kobo_path <- "input_data/HTI_kobo.xlsx"
# label_survey_sheet <-'survey'
# label_choices_sheet <- 'choices'
# kobo_language_label <- "label::french"
kobo_path <- "input_data/AFG2403_MSNA_WoAA2024_kobo_tool.xlsx"
label_survey_sheet <-'survey'
label_choices_sheet <- 'choices'
kobo_language_label <- "label::English"
#-- input tool
#please modify the group_var according to your context
#loa_path = "input_tool/edu_analysistools_loa.xlsx"
loa_path = "input_tool/edu_analysistools_loa_AFG.xlsx"
suffix <- ifelse(language_assessment == 'French', "_FR", "_EN")
data_helper_table <- paste0("input_tool/edu_table_helper", suffix, ".xlsx")
data_helper_table <- ("input_tool/edu_table_helper_EN_AFG.xlsx")
labelling_tool_path <- "input_tool/edu_indicator_labelling.xlsx"
##-------------  definition of variable according to the analysis' context
# id_col_loop = '_submission__uuid.x' # uuid
# id_col_main = '_uuid' # uuid
# survey_start_date = 'start'# column with the survey start
# school_year_start_month = 9 # start school year in country
# ind_age = 'ind_age' # individual age variable
# ind_gender = 'ind_gender' # individual gender variable
# pnta = "pnta"
# dnk = "dnk"
# weight_col = 'weight'
id_col_loop = '_submission__uuid' # uuid
id_col_main = '_uuid' # uuid
survey_start_date = 'start'# column with the survey start
school_year_start_month = 9 # start school year in country
ind_age = 'edu_ind_age' # individual age variable
ind_gender = 'edu_ind_gender' # individual gender variable
pnta = "pnta"
dnk = "dnk"
weight_col = 'weights'
# indicators
ind_access = 'edu_access'
occupation = 'edu_disrupted_occupation'
hazards = 'edu_disrupted_hazards'
displaced = 'edu_disrupted_displaced'
teacher = 'edu_disrupted_teacher'
education_level_grade =  "edu_level_grade"
#barrier = "edu_barrier"
barrier = "resn_no_access"
number_displayed_barrier = 5
# strata --> check consistency with the group_var column  in the loa
# add_col1 = 'setting'
# add_col2 = 'depl_situation_menage'
admin1 = 'admin1'
admin2 = 'admin2'
admin3 = 'admin3'
add_col1 = 'urbanity_setting'
add_col2 = 'forcibly_displaced'
#stratum =
label_overall <- if (language_assessment == "French") "Ensemble" else "Overall"
label_female <- if (language_assessment == "French") "Filles" else "Female / woman"
label_male <- if (language_assessment == "French") "Garcons" else "Male / man"
# Read ISCED info
info_country_school_structure <- read_ISCED_info(country_assessment, path_ISCED_file)
summary_info_school <- info_country_school_structure$summary_info_school
###################################################################################################
# 1 ----------------- 01-add_education_indicators.R -----------------
main_sheet <- label_main_sheet
loop_sheet <- label_edu_sheet
stratum <- NULL
additional_stratum <- NULL
add_col3 <- NULL
add_col4 <- NULL
add_col5 <- NULL
add_col6 <- NULL
add_col7 <- NULL
add_col8 <- NULL
source('src/01-add_education_indicators.R') ## OUTPUT: output/loop_edu_recorded.xlsx
# 2 ----------------- 02-education_analysis.R -----------------
source('src/02-education_analysis.R') ## OUTPUT: output/grouped_other_education_results_loop.RDS
# 3 ----------------- 03-education_labeling.R -----------------
source('src/03-education_labeling.R')
View(education_results_table_labelled)
label_overall <- if (language_assessment == "French") "Ensemble" else "Overall"
label_female <- if (language_assessment == "French") "Filles" else "Girls"
label_male <- if (language_assessment == "French") "Garcons" else "Boys"
# 4 ----------------- create workbook for tables -----------------
wb <- openxlsx::createWorkbook("education_results")
addWorksheet(wb, "Table_of_content")
writeData(wb, sheet = "Table_of_content", x = "Table of Content", startCol = 1, startRow = 1)
# 5 ----------------- 04-01-make-table-access-disruptions.R -----------------
source('src/04-01-make-table-access-disruptions.R')
# 6 ----------------- 04-02-make-table-access-overage.R -----------------
source('src/04-02-make-table-access-overage.R')
# 7 ----------------- 04-03-make-table-barriers.R -----------------
## IMPORTANT: open grouped_other_education_results_loop and copy the first (in decreasing order) 5 edu_barrier_d results in the edu_indicator_labelling_FR/EN.xlsx.
source('src/04-03-make-table-barriers.R')
# 8 ----------------- 04-04-make-ece-table.R -----------------
source('src/04-04-make-ece-table.R')
# 9 ----------------- 04-05-make-level-table.R -----------------
# To repeat according to the number of levels (except ECE) in the country's school system
level_table = 'level1'
source('src/04-05-make-level-table.R')
level_table = 'level2'
source('src/04-05-make-level-table.R')
level_table = 'level3'
source('src/04-05-make-level-table.R')
openxlsx::saveWorkbook(wb, "output/education_results.xlsx", overwrite = T)
openxlsx::openXL("output/education_results.xlsx")
# Read the labeled results table and loa
education_results_table_labelled <- readRDS("output/labeled_results_table.RDS")
loa <- readxl::read_excel(loa_path, sheet = "Sheet1")
loa_ece <- loa %>%
mutate(group_var = str_replace_all(group_var, ",", " %/% "),
group_var = str_squish(group_var)) %>%
filter(ece)
education_results_table_labelled <- education_results_table_labelled %>%
right_join(unique(loa_ece %>% select(analysis_var,group_var, ece)))
# filter results
filtered_education_results_table_labelled <- education_results_table_labelled %>%
filter(ece,
analysis_var_value != "0",
str_detect(group_var_value, "ECE")) |>
select(-ece)
View(filtered_education_results_table_labelled)
# 9 ----------------- 04-05-make-level-table.R -----------------
# To repeat according to the number of levels (except ECE) in the country's school system
level_table = 'level1'
# Read ISCED info
info_country_school_structure <- read_ISCED_info(country_assessment, path_ISCED_file)
summary_info_school <- info_country_school_structure$summary_info_school    # DataFrame 1
label_level = summary_info_school$name_level[summary_info_school$level_code == level_table]
# Prepare the LOA for the specific level
loa_level <- loa %>%
mutate(group_var = str_replace_all(group_var, ",", " %/% "),
group_var = str_squish(group_var)) %>%
filter(!!sym(level_table))
# Join education results with LOA filtered by level_table
education_results_table_labelled <- education_results_table_labelled %>%
right_join(unique(loa_level %>% select(analysis_var, group_var, !!sym(level_table))))
# Filter results
filtered_education_results_table_labelled <- education_results_table_labelled %>%
filter(!!sym(level_table),
analysis_var_value != "0",
str_detect(group_var_value, label_level)) %>%
select(-!!sym(level_table))
View(filtered_education_results_table_labelled)
# Read ISCED info
info_country_school_structure <- read_ISCED_info(country_assessment, path_ISCED_file)
summary_info_school <- info_country_school_structure$summary_info_school    # DataFrame 1
label_level = summary_info_school$name_level[summary_info_school$level_code == level_table]
# Prepare the LOA for the specific level
loa_level <- loa %>%
mutate(group_var = str_replace_all(group_var, ",", " %/% "),
group_var = str_squish(group_var)) %>%
filter(!!sym(level_table))
# Join education results with LOA filtered by level_table
education_results_table_labelled <- education_results_table_labelled %>%
right_join(unique(loa_level %>% select(analysis_var, group_var, !!sym(level_table))))
# Filter results
filtered_education_results_table_labelled <- education_results_table_labelled %>%
filter(!!sym(level_table),
analysis_var_value != "0",
str_detect(group_var_value, label_level)) %>%
select(-!!sym(level_table))
View(filtered_education_results_table_labelled)
filtered_education_results_table_labelled$analysis_var %>% unique()
# 4 ----------------- create workbook for tables -----------------
wb <- openxlsx::createWorkbook("education_results")
addWorksheet(wb, "Table_of_content")
writeData(wb, sheet = "Table_of_content", x = "Table of Content", startCol = 1, startRow = 1)
# 5 ----------------- 04-01-make-table-access-disruptions.R -----------------
source('src/04-01-make-table-access-disruptions.R')
# 6 ----------------- 04-02-make-table-access-overage.R -----------------
source('src/04-02-make-table-access-overage.R')
# 7 ----------------- 04-03-make-table-barriers.R -----------------
## IMPORTANT: open grouped_other_education_results_loop and copy the first (in decreasing order) 5 edu_barrier_d results in the edu_indicator_labelling_FR/EN.xlsx.
source('src/04-03-make-table-barriers.R')
# 8 ----------------- 04-04-make-ece-table.R -----------------
source('src/04-04-make-ece-table.R')
# 9 ----------------- 04-05-make-level-table.R -----------------
# To repeat according to the number of levels (except ECE) in the country's school system
level_table = 'level1'
source('src/04-05-make-level-table.R')
level_table = 'level2'
source('src/04-05-make-level-table.R')
level_table = 'level3'
source('src/04-05-make-level-table.R')
openxlsx::saveWorkbook(wb, "output/education_results.xlsx", overwrite = T)
openxlsx::openXL("output/education_results.xlsx")
openxlsx::saveWorkbook(wb, "output/education_results.xlsx", overwrite = T)
openxlsx::openXL("output/education_results.xlsx")
openxlsx::openXL("output/education_results.xlsx")
# Load packages -----------------------------------------------------------
library(impactR.utils)
library(humind)
library (presentresults)
# Needed tidyverse packages
library(readxl)
library(openxlsx)
library(writexl)
library(tidyverse)
library(grid)
library(gridExtra)
library(srvyr)
library(analysistools)
library(gt)
source ('src/functions/00_edu_helper.R')
source ('src/functions/00_edu_function.R')
source("src/functions/create_education_table_group_x_var.R")
source("src/functions/create_education_xlsx_table.R")
## --------------------------
#country_assessment = 'HTI'
#language_assessment = 'French'
country_assessment = 'AFG'
language_assessment = 'English'
## --------------- File paths
#-- input data
# path_ISCED_file <- 'resources/UNESCO ISCED Mappings_MSNAcountries_consolidated.xlsx'
# data_file <- 'input_data/HTI2401-MSNA-DEPARTEMENTS-Clean-dataset.xlsx'
# label_main_sheet <-'Clean Data'
# label_edu_sheet <- 'ind_loop'
path_ISCED_file <- 'resources/UNESCO ISCED Mappings_MSNAcountries_consolidated.xlsx'
data_file <- 'input_data/AFG2403_MSNA_WoAA_2024_clean_data.xlsx'
label_main_sheet <-'AFG2403 MSNA WoAA 2024 MODULE 1'
label_edu_sheet <- 'edu_ind'
# kobo_path <- "input_data/HTI_kobo.xlsx"
# label_survey_sheet <-'survey'
# label_choices_sheet <- 'choices'
# kobo_language_label <- "label::french"
kobo_path <- "input_data/AFG2403_MSNA_WoAA2024_kobo_tool.xlsx"
label_survey_sheet <-'survey'
label_choices_sheet <- 'choices'
kobo_language_label <- "label::English"
#-- input tool
#please modify the group_var according to your context
#loa_path = "input_tool/edu_analysistools_loa.xlsx"
loa_path = "input_tool/edu_analysistools_loa_AFG.xlsx"
suffix <- ifelse(language_assessment == 'French', "_FR", "_EN")
data_helper_table <- paste0("input_tool/edu_table_helper", suffix, ".xlsx")
data_helper_table <- ("input_tool/edu_table_helper_EN_AFG.xlsx")
labelling_tool_path <- "input_tool/edu_indicator_labelling.xlsx"
##-------------  definition of variable according to the analysis' context
# id_col_loop = '_submission__uuid.x' # uuid
# id_col_main = '_uuid' # uuid
# survey_start_date = 'start'# column with the survey start
# school_year_start_month = 9 # start school year in country
# ind_age = 'ind_age' # individual age variable
# ind_gender = 'ind_gender' # individual gender variable
# pnta = "pnta"
# dnk = "dnk"
# weight_col = 'weight'
id_col_loop = '_submission__uuid' # uuid
id_col_main = '_uuid' # uuid
survey_start_date = 'start'# column with the survey start
school_year_start_month = 9 # start school year in country
ind_age = 'edu_ind_age' # individual age variable
ind_gender = 'edu_ind_gender' # individual gender variable
pnta = "pnta"
dnk = "dnk"
weight_col = 'weights'
# indicators
ind_access = 'edu_access'
occupation = 'edu_disrupted_occupation'
hazards = 'edu_disrupted_hazards'
displaced = 'edu_disrupted_displaced'
teacher = 'edu_disrupted_teacher'
education_level_grade =  "edu_level_grade"
#barrier = "edu_barrier"
barrier = "resn_no_access"
number_displayed_barrier = 5
# strata --> check consistency with the group_var column  in the loa
# add_col1 = 'setting'
# add_col2 = 'depl_situation_menage'
admin1 = 'admin1'
admin2 = 'admin2'
admin3 = 'admin3'
add_col1 = 'urbanity_setting'
add_col2 = 'forcibly_displaced'
#stratum =
label_overall <- if (language_assessment == "French") "Ensemble" else "Overall"
label_female <- if (language_assessment == "French") "Filles" else "Girls"
label_male <- if (language_assessment == "French") "Garcons" else "Boys"
# Read ISCED info
info_country_school_structure <- read_ISCED_info(country_assessment, path_ISCED_file)
summary_info_school <- info_country_school_structure$summary_info_school
###################################################################################################
# 1 ----------------- 01-add_education_indicators.R -----------------
main_sheet <- label_main_sheet
loop_sheet <- label_edu_sheet
stratum <- NULL
additional_stratum <- NULL
add_col3 <- NULL
add_col4 <- NULL
add_col5 <- NULL
add_col6 <- NULL
add_col7 <- NULL
add_col8 <- NULL
# source('src/01-add_education_indicators.R') ## OUTPUT: output/loop_edu_recorded.xlsx
#
# # 2 ----------------- 02-education_analysis.R -----------------
# source('src/02-education_analysis.R') ## OUTPUT: output/grouped_other_education_results_loop.RDS
#
# # 3 ----------------- 03-education_labeling.R -----------------
# source('src/03-education_labeling.R')  ## OUTPUT: output/labeled_results_table.RDS  ---- df: education_results_table_labelled
# 4 ----------------- create workbook for tables -----------------
wb <- openxlsx::createWorkbook("education_results")
addWorksheet(wb, "Table_of_content")
writeData(wb, sheet = "Table_of_content", x = "Table of Content", startCol = 1, startRow = 1)
# 5 ----------------- 04-01-make-table-access-disruptions.R -----------------
source('src/04-01-make-table-access-disruptions.R')
# 6 ----------------- 04-02-make-table-access-overage.R -----------------
source('src/04-02-make-table-access-overage.R')
# 7 ----------------- 04-03-make-table-barriers.R -----------------
## IMPORTANT: open grouped_other_education_results_loop and copy the first (in decreasing order) 5 edu_barrier_d results in the edu_indicator_labelling_FR/EN.xlsx.
source('src/04-03-make-table-barriers.R')
# 8 ----------------- 04-04-make-ece-table.R -----------------
source('src/04-04-make-ece-table.R')
# 9 ----------------- 04-05-make-level-table.R -----------------
# To repeat according to the number of levels (except ECE) in the country's school system
level_table = 'level1'
source('src/04-05-make-level-table.R')
level_table = 'level2'
source('src/04-05-make-level-table.R')
level_table = 'level3'
source('src/04-05-make-level-table.R')
openxlsx::saveWorkbook(wb, "output/education_results.xlsx", overwrite = T)
openxlsx::openXL("output/education_results.xlsx")
# 10 ----------------- 05-01-make-level-table.R -----------------
tab_helper <- "access"
results_filtered <- "output/rds_results/access_disruptions_results.rds"
source('src/05-01-make-graphs-and-maps-tables.R')
tab_helper <- "overage"
results_filtered <- "output/rds_results/access_overage_results.rds"
source('src/05-01-make-graphs-and-maps-tables.R')
tab_helper <- "out_of_school"
results_filtered <- "output/rds_results/barriers_results.rds"
source('src/05-01-make-graphs-and-maps-tables.R')
tab_helper <- "ece"
results_filtered <- "output/rds_results/ece_results.rds"
source('src/05-01-make-graphs-and-maps-tables.R')
tab_helper <- "level1"
results_filtered <- "output/rds_results/level1_results.rds"
source('src/05-01-make-graphs-and-maps-tables.R')
tab_helper <- "level2"
results_filtered <- "output/rds_results/level2_results.rds"
source('src/05-01-make-graphs-and-maps-tables.R')
tab_helper <- "level3"
results_filtered <- "output/rds_results/level3_results.rds"
source('src/05-01-make-graphs-and-maps-tables.R')
